# ===============================
# = DATA SOURCE
# ===============================

# Defina aqui as configurações para conexão ao banco de dados

# URL de conexão para o banco LOCAL "taw"
spring.datasource.url = jdbc:mysql://localhost:3306/taw?useSSL=false

# Usuário e senha do banco - o ideal é utilizar um usuário que tenha acesso somente
# ao banco da aplicação
# CREATE USER 'taw'@'localhost' IDENTIFIED BY 'taw';
# GRANT ALL ON taw.* TO 'taw'@'localhost';
spring.datasource.username = taw
spring.datasource.password = taw

# Mantem a conexão ativa se ela não for usada por um longo período de tempo
# (necessário em produção)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Utilize spring.jpa.properties.* para propriedades nativas do Hibernate

# Mostrar ou não cada query SQL
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): com "update" o esquema do banco
# será atualizado automaticamente de acordo com as entidades encontradas no projeto
# spring.jpa.hibernate.ddl-auto = update

# Naming strategy: ImprovedNamingStrategy transforma o nome das classes/atributos
# em CamelCase para camel_case
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Faz com que o Hibernate produza consultas SQL otimizadas para o MySLQ 5
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
